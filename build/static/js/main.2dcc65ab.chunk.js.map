{"version":3,"sources":["api.js","App.js","serviceWorker.js","index.js"],"names":["API","axios","create","baseURL","timeout","responseType","fetch","get","then","catch","e","App","state","display_mode","ticks","online","check","r","setState","document","title","this","setInterval","className","onClick","AtomButton","HeartButton","Atom","Ecg","Math","floor","Component","props","xmlns","viewBox","d","cx","cy","points","y1","x2","y2","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"mTAEaA,E,OAAOC,EAAMC,OAAO,CAC7BC,QAAS,6CACTC,QAAS,IACTC,aAAa,SAGV,SAASC,IACZ,OAAON,EAAIO,IAAI,IAAIC,MAAK,WACpB,OAAO,KACRC,OAAM,SAAAC,GACL,OAAO,KCRR,IAgDQC,EAhDf,4MAEIC,MAAQ,CACJC,aAAc,QACdC,MAAO,EACPC,OAAQ,UALhB,EAaIC,MAAQ,WACJV,IAAQE,MAAK,SAAAS,GACT,IAAIH,EAAQG,EAAI,EAAI,EAAKL,MAAME,MAAQ,EACvC,EAAKI,SAAS,CAACJ,QAAOC,OAASE,EAAI,SAAW,YAC9CE,SAASC,MAAQH,EAAI,YAAc,mBAjB/C,kEASQI,KAAKL,QACLM,YAAYD,KAAKL,MAAO,OAVhC,+BAqBc,IAAD,SACiCK,KAAKT,MAApCE,EADF,EACEA,MAAOC,EADT,EACSA,OAAQF,EADjB,EACiBA,aAEtB,OACI,yBAAKU,UAAW,OAASR,GACrB,yBAAKQ,UAAW,WACZ,yBAAKC,QAAS,kBAAM,EAAKN,SAAS,CAACL,aAAc,cAC7C,kBAACY,EAAD,OAEJ,yBAAKD,QAAS,kBAAM,EAAKN,SAAS,CAACL,aAAc,YAC7C,kBAACa,EAAD,QAIU,YAAjBb,EACG,kBAACc,EAAD,CAAMb,MAAOA,EAAOC,OAAQA,IAE5B,kBAACa,EAAD,CAAKd,MAAOA,EAAOC,OAAQA,IAE/B,yBAAKQ,UAAW,SAAWR,GACtBc,KAAKC,MAAMhB,EAAQ,SAzCxC,GAAyBiB,aAkDzB,SAASJ,EAAKK,GAAQ,IACXjB,EAAUiB,EAAVjB,OAEP,OACQ,yBAAKQ,UAAW,QAAUR,EAAQkB,MAAM,6BAA6BC,QAAQ,mBACzE,uBAAGX,UAAWR,GACV,0BACIoB,EAAE,m6EACN,4BAAQC,GAAG,QAAQC,GAAG,QAAQpB,EAAE,SAChC,0BAAMkB,EAAE,mBAM5B,SAASP,EAAII,GAGT,MACe,WAHEA,EAAVjB,OAIC,yBAAKQ,UAAW,aAAcU,MAAM,6BAA6BC,QAAQ,mBACrE,8BACII,OAAO,+FAGf,yBAAKf,UAAW,cAAeU,MAAM,6BAA6BC,QAAQ,aACtE,0BAAMK,GAAG,MAAMC,GAAG,MAAMC,GAAG,SAK3C,SAAShB,IACL,OACI,yBAAKF,UAAW,WAAYU,MAAM,6BAA6BC,QAAQ,eACvE,0BACAC,EAAE,0wDAMV,SAAST,IACL,OACI,yBAAKH,UAAW,WAAYU,MAAM,6BAA6BC,QAAQ,eACvE,0BACEC,EAAE,4ZCvFQO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9B,SAAS+B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB7C,MAAK,SAAA8C,GACJA,EAAaC,gBAEd9C,OAAM,SAAA+C,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2dcc65ab.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API =  axios.create({\r\n    baseURL: 'https://clear-trash-api.herokuapp.com/ping',\r\n    timeout: 2000,\r\n    responseType:'json',\r\n});\r\n\r\nexport function fetch() {\r\n    return API.get('').then(() => {\r\n        return true;\r\n    }).catch(e => {\r\n        return false;\r\n    })\r\n}\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport {fetch} from './api'\n\nexport class App extends Component {\n\n    state = {\n        display_mode: 'heart',\n        ticks: 0,\n        online: 'online'\n    };\n\n    componentDidMount() {\n        this.check();\n        setInterval(this.check, 500);\n    }\n\n    check = () => {\n        fetch().then(r => {\n            let ticks = r ? 0 : this.state.ticks + 1;\n            this.setState({ticks, online: (r ? 'online' : 'offline')})\n            document.title = r ? \"Conectado\" : \"Desconectado\";\n        });\n    };\n\n    render() {\n        const {ticks, online, display_mode} = this.state;\n\n        return (\n            <div className={'app ' + online}>\n                <div className={'buttons'}>\n                    <div onClick={() => this.setState({display_mode: 'nuclear'})} >\n                        <AtomButton />\n                    </div>\n                    <div onClick={() => this.setState({display_mode: 'heart'})} >\n                        <HeartButton />\n                    </div>\n                </div>\n\n                {display_mode === 'nuclear' ?\n                    <Atom ticks={ticks} online={online}/>\n                    :\n                    <Ecg ticks={ticks} online={online}/>\n                }\n                <div className={'ticks ' + online}>\n                    {Math.floor(ticks / 2)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\nfunction Atom(props) {\n    const {online} = props;\n\n    return (\n            <svg className={\"atom \" + online} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\n                <g className={online}>\n                    <path\n                        d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\"/>\n                    <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\"/>\n                    <path d=\"M520.5 78.1z\"/>\n                </g>\n            </svg>\n    )\n}\n\nfunction Ecg(props) {\n    const {online} = props;\n\n    return (\n        online === 'online' ?\n            <svg className={'ecg online'} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 349 170.529\">\n                <polyline\n                    points=\"0 111.412 147.5 111.412 171.5 145.412 185.5 4.412 206.5 167.412 217.5 111.412 349 111.412\"/>\n            </svg>\n            :\n            <svg className={'ecg offline'} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 349 1\">\n                <line y1=\"0.5\" x2=\"349\" y2=\"0.5\"/>\n            </svg>\n    )\n}\n\nfunction AtomButton() {\n    return (\n        <svg className={\"lil-icon\"} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n        <path\n        d=\"M223.99908,224a32,32,0,1,0,32.00782,32A32.06431,32.06431,0,0,0,223.99908,224Zm214.172-96c-10.877-19.5-40.50979-50.75-116.27544-41.875C300.39168,34.875,267.63386,0,223.99908,0s-76.39066,34.875-97.89653,86.125C50.3369,77.375,20.706,108.5,9.82907,128-6.54984,157.375-5.17484,201.125,34.958,256-5.17484,310.875-6.54984,354.625,9.82907,384c29.13087,52.375,101.64652,43.625,116.27348,41.875C147.60842,477.125,180.36429,512,223.99908,512s76.3926-34.875,97.89652-86.125c14.62891,1.75,87.14456,10.5,116.27544-41.875C454.55,354.625,453.175,310.875,413.04017,256,453.175,201.125,454.55,157.375,438.171,128ZM63.33886,352c-4-7.25-.125-24.75,15.00391-48.25,6.87695,6.5,14.12891,12.875,21.88087,19.125,1.625,13.75,4,27.125,6.75,40.125C82.34472,363.875,67.09081,358.625,63.33886,352Zm36.88478-162.875c-7.752,6.25-15.00392,12.625-21.88087,19.125-15.12891-23.5-19.00392-41-15.00391-48.25,3.377-6.125,16.37891-11.5,37.88478-11.5,1.75,0,3.875.375,5.75.375C104.09864,162.25,101.84864,175.625,100.22364,189.125ZM223.99908,64c9.50195,0,22.25586,13.5,33.88282,37.25-11.252,3.75-22.50391,8-33.88282,12.875-11.377-4.875-22.62892-9.125-33.88283-12.875C201.74516,77.5,214.49712,64,223.99908,64Zm0,384c-9.502,0-22.25392-13.5-33.88283-37.25,11.25391-3.75,22.50587-8,33.88283-12.875C235.378,402.75,246.62994,407,257.8819,410.75,246.25494,434.5,233.501,448,223.99908,448Zm0-112a80,80,0,1,1,80-80A80.00023,80.00023,0,0,1,223.99908,336ZM384.6593,352c-3.625,6.625-19.00392,11.875-43.63479,11,2.752-13,5.127-26.375,6.752-40.125,7.75195-6.25,15.00391-12.625,21.87891-19.125C384.7843,327.25,388.6593,344.75,384.6593,352ZM369.65538,208.25c-6.875-6.5-14.127-12.875-21.87891-19.125-1.625-13.5-3.875-26.875-6.752-40.25,1.875,0,4.002-.375,5.752-.375,21.50391,0,34.50782,5.375,37.88283,11.5C388.6593,167.25,384.7843,184.75,369.65538,208.25Z\"\n        />\n        </svg>\n    )\n}\n\nfunction HeartButton() {\n    return (\n        <svg className={\"lil-icon\"} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n        <path\n          d=\"M320.2 243.8l-49.7 99.4c-6 12.1-23.4 11.7-28.9-.6l-56.9-126.3-30 71.7H60.6l182.5 186.5c7.1 7.3 18.6 7.3 25.7 0L451.4 288H342.3l-22.1-44.2zM473.7 73.9l-2.4-2.5c-51.5-52.6-135.8-52.6-187.4 0L256 100l-27.9-28.5c-51.5-52.7-135.9-52.7-187.4 0l-2.4 2.4C-10.4 123.7-12.5 203 31 256h102.4l35.9-86.2c5.4-12.9 23.6-13.2 29.4-.4l58.2 129.3 49-97.9c5.9-11.8 22.7-11.8 28.6 0l27.6 55.2H481c43.5-53 41.4-132.3-7.3-182.1z\"\n          />\n        </svg>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}